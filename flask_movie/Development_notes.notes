
------======Flask Tutorial============----

Chris Hawkes, YouTube

- Building a basic movie website

-------------------
Requirements
--------------------
-  Python
- virtualenv
- Flask
- PostgreSQL
- Flask-SQLAlchemy


--------------------
Installation
--------------------
- Need to use virtual env - comes with Python 3.5 - to be able to isolate the 
development environment for each project we are working on - 

 	pip install virtualenv

- Move to the directory you are working in, create an environment called env

	virtualenv env

- Enter into env/Scripts
	cd env
	cd Scripts

- Activate the environment
	'activate' in Scripts - run that to start the env

- Check that Python is installed
- Exit the interpreter

- Install Flask
   pip install flask
	Installs flask just for this env - flask is not shared with any other enviroments/ projects

- Open python interpreter, check that flask is installed - there should be no error message

	[python]

		from flask import Flask
		
    [end]

-------------------
Directories
--------------------
When you create a web application you should have folders for your
- Templates
- Static content (css, js)
- Images

- Create static, templates, images folders using mkdir
- Go back to the project folder 
   cd..
---------------------------------------------------------------------------
Create a minimal flask application just to make sure everything works
-------------------------------------------------------------------------------
- Create a python file app.py to say hello flask
- By default flask comes with a development server so we can test the application without deploying to an actual web server
- It will host it on the localhost address with the 5000 port 

- The root directory is going to be executed and we defined our root directory 
with app.route('/') - start the function written below that returns hello flask
- If you inspect the page you can see it's just text
--------------------------------------------
Establish a link with a postgreSQL database
--------------------------------------------
In app.py

- Install Flask-SQLAlchemy

	pip install Flask-SQLAlchemy

- Import SQLALchemy
- Install Postgresql and create a database "flaskmovie" using the PgAdmin tool
- Write the config string in the format "postgres://username:password@server/dbname"
--------------------------------
Database tables/schema
--------------------------------
- Create a class and name the class with what we want the table name to be
  For eg, class User - we want a User table
- Assign each column with the options you want, set primary key, etc. - this autoincrements the ID 

- Install psycopg2


---------------------------------
Create the database
---------------------------------
Run the code from the python interpreter in the cmdline
[python]
	from app import db
	db.create_all()
[end]

------------------------------
Adding data to the database
------------------------------
Data is added using HTTP methods like 'get', 'post',etc.
- get - when you are not making changes 
- post - updating/posting something on the server

We have only one function - homepage
-Now we'll add one more function called post_user and use the 'POST' method

We can't just return a static html on the homepage
FLASK comes with jinja2 which has templates - import rendertemplate
- Create add_user.html in the templates folder in your project